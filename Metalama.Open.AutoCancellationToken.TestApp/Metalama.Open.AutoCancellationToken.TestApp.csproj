<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net5.0</TargetFramework>
    <!-- this property decides whether the weaver is referenced as a project (common for projects in the same solution) or as a NuGet package -->
    <UsePackageReference Condition="'$(UsePackageReference)' == ''">false</UsePackageReference>
  </PropertyGroup>

  <Choose>
    <When Condition="$(UsePackageReference) != 'true'">

      <!-- to reference the weaver as a project, we need to add these three references separately -->
      <!-- OutputItemType="Analyzer" on the two ProjectReferences is needed so that Caravela can execute the weaver at build time -->
      <!-- ReferenceOutputAssembly="false" ensures that this project does not have access to libraries that it shouldn't: Caravela SDK and Roslyn -->
      <ItemGroup>
        <ProjectReference Include="..\Caravela.Open.AutoCancellationToken.Weaver\Caravela.Open.AutoCancellationToken.Weaver.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
        <ProjectReference Include="..\Caravela.Open.AutoCancellationToken\Caravela.Open.AutoCancellationToken.csproj" OutputItemType="Analyzer" />
        <PackageReference Include="Caravela.Framework" Version="0.1.0-preview" />
      </ItemGroup>

    </When>
    <Otherwise>

      <!-- to reference the weaver as a package, this one line is mostly enough -->
      <ItemGroup>
        <PackageReference Include="Caravela.Open.AutoCancellationToken" Version="0.1.0-preview" />
      </ItemGroup>
      <!-- we also need to add a NuGet source that points to where the weaver package is located -->
      <!-- this is not necessary if the weaver package is on NuGet.org, or another configured package source -->
      <PropertyGroup>
        <RestoreAdditionalProjectSources>../Caravela.Open.AutoCancellationToken.Weaver/bin/$(Configuration)</RestoreAdditionalProjectSources>
      </PropertyGroup>

    </Otherwise>
  </Choose>

</Project>
